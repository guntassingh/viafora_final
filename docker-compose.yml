version: '2.1'
services:
  configserverapp:
    image: configserverapp
    build:
      context: ./ConfigServerApplication
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    networks:
      - springapp
    volumes:
      - /data/configserverapp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://10.191.93.53:8888/actuator/health"]
      interval: 3s
      timeout: 10s
      retries: 5
  eurekaserver:
    image: eurekaserver
    build:
      context: ./EurekaServer
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - springapp
    volumes:
      - /data/eurekaserver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://10.191.93.53:8761/actuator/health"]
      interval: 3s
      timeout: 10s
      retries: 5
    depends_on:
      configserverapp:
        condition: service_healthy
  zuulgatewayservice:
    image: zuulgatewayservice 
    build:
      context: ./ZuulGatewayService
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - springapp
    volumes:
      - /data/ZuulGatewayService
    healthcheck:
      test: ["CMD", "curl", "-f", "http://10.191.93.53:8080/actuator/health"]
      interval: 3s
      timeout: 10s
      retries: 5
    depends_on:
      eurekaserver:
        condition: service_healthy
  spring-boot-jpa-app:
    image: spring-boot-jpa-image
    build:
      context: ./URLShortener
      dockerfile: Dockerfile
    networks:
      - springapp
    ports:
      - 9091:9091
    volumes:
      - /data/spring-boot-app
    depends_on:
      zuulgatewayservice:
        condition: service_healthy
networks:
  springapp:
    